on:
  push:
jobs:
  ubuntu-ci:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13.x
    - name: Checkout
      uses: actions/checkout@v1
    - name: Download Go modules
      run: go mod download
    - name: Build
      run: go build ./...
    - name: Run
      run: go run . --version
    - name: Test
      run: go test -race ./...
    - name: Lint
      run: |
        curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- v1.21.0
        make lint
    - name: Check formatting
      run: |
        GO111MODULE=off go get -u mvdan.cc/gofumpt/gofumports
        make format
        git diff --exit-code
    - name: Check generate
      run: |
        GO111MODULE=off go get -u github.com/gobuffalo/packr/v2/packr2
        make generate
        git diff --exit-code
    - name: Check completions
      run: |
        make completions
        git diff --exit-code
  macos-ci:
    runs-on: macos-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13.x
    - name: Checkout
      uses: actions/checkout@v1
    - name: Download Go modules
      run: go mod download
    - name: Build
      run: go build ./...
    - name: Run
      run: go run . --version
    - name: Test
      run: go test -race ./...
  windows-ci:
    runs-on: windows-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13.x
    - name: Checkout
      uses: actions/checkout@v1
    - name: Download Go modules
      run: go mod download
    - name: Build
      run: go build ./...
    - name: Run
      run: go run . --version
    - name: Test
      run: go test -race ./...
  release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs:
    - ubuntu-ci
    - macos-ci
    - windows-ci
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13.x
    - name: Checkout
      uses: actions/checkout@v1
    - name: Download Go modules
      run: go mod download
    - name: Set up Snapcraft
      env:
        SNAPCRAFT_LOGIN: ${{ secrets.SNAPCRAFT_LOGIN }}
      run: |
        sudo snap install snapcraft --classic
        sudo chown root:root /
        echo ${SNAPCRAFT_LOGIN} | snapcraft login --with -
    - name: Release
      run: |
        sudo snap install goreleaser --classic
        goreleaser release