<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on chezmoi.io</title>
    <link>https://chezmoi.io/</link>
    <description>Recent content in Home on chezmoi.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://chezmoi.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Changes</title>
      <link>https://chezmoi.io/docs/changes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chezmoi.io/docs/changes/</guid>
      <description>Changes #  Overview #  This document describes what&amp;rsquo;s new in chezmoi v2 for chezmoi v1 users.
If you&amp;rsquo;re not using a dotfile manager, then read why you should you use a dotfile manager and then install chezmoi and follow the quick-start guide.
If you&amp;rsquo;re already using a dotfile manager, but not chezmoi, then read about how chezmoi compares to other dotfile managers first and then install chezmoi, follow the quick-start guide, and read the how-to guide to quickly discover chezmoi&amp;rsquo;s functionality.</description>
    </item>
    
    <item>
      <title>Comparison</title>
      <link>https://chezmoi.io/docs/comparison/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chezmoi.io/docs/comparison/</guid>
      <description>Comparison Guide #  Comparison table #      chezmoi dotbot rcm homesick yadm bare git     Distribution Single binary Python package Multiple files Ruby gem Single script n/a   Install method Many git submodule Many Ruby gem Many Manual   Non-root install on bare system ✅ Difficult Difficult Difficult ✅ ✅   Windows support ✅ ❌ ❌ ❌ ❌ ✅   Bootstrap requirements None Python, git Perl, git Ruby, git git git   Source repos Single Single Multiple Single Single Single   dotfiles are&amp;hellip; Files Symlinks Files Symlinks Files Files   Config file Optional Required Optional None None Optional   Private files ✅ ❌ ❌ ❌ ❌ ❌   Show differences without applying ✅ ❌ ❌ ❌ ✅ ✅   Whole file encryption ✅ ❌ ❌ ❌ ✅ ❌   Password manager integration ✅ ❌ ❌ ❌ ❌ ❌   Machine-to-machine file differences Templates Alternative files Alternative files Alternative files Templates Manual   Custom variables in templates ✅ ❌ ❌ ❌ ❌ ❌   Executable files ✅ ✅ ✅ ✅ ❌ ✅   File creation with initial contents ✅ ❌ ❌ ❌ ❌ ❌   Manage partial files ✅ ❌ ❌ ❌ ❌ ❌   File removal ✅ ❌ ❌ ❌ ❌ ❌   Directory creation ✅ ✅ ✅ ❌ ❌ ✅   Run scripts ✅ ✅ ✅ ❌ ❌ ❌   Run once scripts ✅ ❌ ❌ ❌ Manual ❌   Machine-to-machine symlink differences ✅ ❌ ❌ ❌ ✅ ❌   Shell completion ✅ ❌ ❌ ❌ ✅ ✅   Archive import ✅ ❌ ❌ ❌ ❌ ❌   Archive export ✅ ❌ ❌ ❌ ❌ ✅   Implementation language Go Python Perl Ruby Bash C    For more comparisons, visit dotfiles.</description>
    </item>
    
    <item>
      <title>Contributing</title>
      <link>https://chezmoi.io/docs/contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chezmoi.io/docs/contributing/</guid>
      <description>Contributing Guide #  Getting started #  chezmoi is written in Go and development happens on GitHub. The rest of this document assumes that you&amp;rsquo;ve checked out chezmoi locally.
Developing locally #  chezmoi requires Go 1.16 or later.
chezmoi is a standard Go project, using standard Go tooling, with a few extra tools. Ensure that these extra tools are installed with:
make ensure-tools  Build chezmoi:
go build .</description>
    </item>
    
    <item>
      <title>FAQ</title>
      <link>https://chezmoi.io/docs/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chezmoi.io/docs/faq/</guid>
      <description>Frequently Asked Questions #  How can I quickly check for problems with chezmoi on my machine? #  Run:
chezmoi doctor  Anything ok is fine, anything warning is only a problem if you want to use the related feature, and anything error indicates a definite problem.
What are the consequences of &amp;ldquo;bare&amp;rdquo; modifications to the target files? If my .zshrc is managed by chezmoi and I edit ~/.zshrc without using chezmoi edit, what happens?</description>
    </item>
    
    <item>
      <title>How-To</title>
      <link>https://chezmoi.io/docs/how-to/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chezmoi.io/docs/how-to/</guid>
      <description>How-To Guide #  Daily operations #  Use a hosted repo to manage your dotfiles across multiple machines #  chezmoi relies on your version control system and hosted repo to share changes across multiple machines. You should create a repo on the source code repository of your choice (e.g. Bitbucket, GitHub, or GitLab, many people call their repo dotfiles) and push the repo in the source directory here. For example:</description>
    </item>
    
    <item>
      <title>Install</title>
      <link>https://chezmoi.io/docs/install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chezmoi.io/docs/install/</guid>
      <description>Install Guide #  One-line binary install #  Install the correct binary for your operating system and architecture in ./bin with a single command:
sh -c &amp;quot;$(curl -fsLS git.io/chezmoi)&amp;quot;  Or, if you have wget instead of curl:
sh -c &amp;quot;$(wget -qO- git.io/chezmoi)&amp;quot;  If you already have a dotfiles repo using chezmoi on GitHub at https://github.com/&amp;lt;github-username&amp;gt;/dotfiles then you can install chezmoi and your dotfiles with the single command:</description>
    </item>
    
    <item>
      <title>Media</title>
      <link>https://chezmoi.io/docs/media/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chezmoi.io/docs/media/</guid>
      <description>Media #  Recommended article: Fedora Magazine: Take back your dotfiles with Chezmoi
Recommended video: chezmoi: manage your dotfiles across multiple, diverse machines, securely
Recommended podcast: FLOSS weekly episode 556: chezmoi
   Date Version Format Link     2021-02-17 1.8.11 Text (JP) chezmoi で dotfiles を手軽に柔軟にセキュアに管理する   2021-02-06 1.8.10 Video chezmoi: manage your dotfiles across multiple, diverse machines, securely   2021-01-29 1.8.10 Text (CN) [归档] 用 Chezmoi 管理配置文件   2021-01-12 1.</description>
    </item>
    
    <item>
      <title>Quick Start</title>
      <link>https://chezmoi.io/docs/quick-start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chezmoi.io/docs/quick-start/</guid>
      <description>Quick Start Guide #  Concepts #  chezmoi stores the desired state of your dotfiles in the directory ~/.local/share/chezmoi. When you run chezmoi apply, chezmoi calculates the desired contents and permissions for each dotfile and then makes any changes necessary so that your dotfiles match that state.
Start using chezmoi on your current machine #  Assuming that you have already installed chezmoi, initialize chezmoi with:
chezmoi init  This will create a new git repository in ~/.</description>
    </item>
    
    <item>
      <title>Reference</title>
      <link>https://chezmoi.io/docs/reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chezmoi.io/docs/reference/</guid>
      <description>Reference Manual #  Concepts #  chezmoi evaluates the source state for the current machine and then updates the destination directory, where:
  The source state declares the desired state of your home directory, including templates and machine-specific configuration.
  The source directory is where chezmoi stores the source state, by default ~/.local/share/chezmoi.
  The target state is the source state computed for the current machine.</description>
    </item>
    
    <item>
      <title>Related</title>
      <link>https://chezmoi.io/docs/related/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chezmoi.io/docs/related/</guid>
      <description>Related Software #  github.com/alker0/chezmoi.vim #  Intelligent VIM syntax highlighting when editing files in your source directory. Works with both chezmoi edit and editing files directly.
github.com/tuh8888/chezmoi.el #  Convenience functions for interacting with chezmoi in Emacs.
github.com/Lilja/vim-chezmoi #  A plugin for VIM to apply the dotfile you are editing on :w.</description>
    </item>
    
    <item>
      <title>Templating</title>
      <link>https://chezmoi.io/docs/templating/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chezmoi.io/docs/templating/</guid>
      <description>Templating Guide #  Introduction #  Templates are used to change the contents of a file depending on the environment. For example, you can use the hostname of the machine to create different configurations on different machines.
chezmoi uses the text/template syntax from Go extended with text template functions from sprig.
When reading files from the source state, chezmoi interprets them as a template if either of the following is true:</description>
    </item>
    
  </channel>
</rss>
